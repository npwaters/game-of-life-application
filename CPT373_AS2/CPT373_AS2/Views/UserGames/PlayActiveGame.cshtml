@model CPT373_AS2.Models.UserGame

@{
    ViewBag.Title = "PlayActiveGame";
}

<h2>PlayActiveGame</h2>

<div>
    <h4>UserGame</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Height)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Height)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Width)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Width)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Cells)
        </dt>

        <dd id="cells">
            <pre style="display: inline-block">@Html.DisplayCells(model => model.Cells)</pre> 
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.User.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.User.Email)
        </dd>

    </dl>
</div>
<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.UserGameID }) |*@
    @Html.ActionLink("Back to List", "ListActiveGames")
</p>

@*<p><a class="btn btn-primary btn-lg" id="playGame">Play Game</a></p*@>
<input class="btn btn-primary btn-lg" type="button" id="play" value="Play Active Game"/>
<input class="btn btn-primary btn-lg" type="button" id="stop" value="Stop Active Game" />
<input class="btn btn-primary btn-lg" type="button" id="save" value="Save Game" />



@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    @*<script src="~/Scripts/golticker.js"></script>*@
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var gol = $.connection.golTicker;
            game = @Html.Raw(Json.Encode(Model));



            $.extend(gol.client, {
                addTurnToPage: function (cells) {
                    // Add the updated cells to the page.
                    $('#cells').html(htmlEncode(cells));
                },

                updateGame: function (currentGame) {
                    console.log(currentGame.Name);
                    var g = currentGame;
                    game = JSON.parse(currentGame);
                },
                
                UpdateStoppedSessionGame: function(currentGame){
                    var g = JSON.parse(currentGame);
                    var url = '@Url.Action("UpdateStoppedSessionGame")';
                    $.post(url, { game: g});
                },
            });


            // Start the connection.
            $.connection.hub.logging = true;
            $.connection.hub.start()
                .done(function () {
                $('#play').click(function () {
                    // Call the PlayActiveGame method on the hub.
                    // http://forums.asp.net/t/2027743.aspx?How+to+pass+JSON+back+and+forth+from+signalr+hub+js+code
                    gol.server.playActiveGame(game);
                });
                $('#stop').click(function () {
                    gol.server.stopActiveGame();
                });
                $('#save').click(function () {
                    SaveGame(game);
                });
            });
        });

        // html-encode cells for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<pre style="display: inline-block" />').html(value);
            return encodedValue;
        }

        function SaveGame(game){
            var sessionID = game.UserGameSessionID;
            var url = '@Url.Action("SaveGameFromActiveList")';
            $.post(url, { id: sessionID});
        }




    </script>
}